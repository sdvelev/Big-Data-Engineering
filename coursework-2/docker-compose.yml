version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      retries: 5
    networks:
      - mlnet

  airflow-webserver:
    build: .
    image: custom-airflow:latest
    container_name: airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__FERNET_KEY=rqBLDe7ftXkYvPLKjwdkCR42Up-LVteBKtO_5DQfUww=
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./airflow:/opt/airflow
      - ./dags:/opt/airflow/dags
      - /mnt/vm2share:/opt/airflow/data
      - ./secrets:/opt/airflow/secrets
    ports:
      - "8080:8080"
    command: bash -c "airflow db init && airflow users create \
                      --username $${_AIRFLOW_WWW_USER_USERNAME} \
                      --password $${_AIRFLOW_WWW_USER_PASSWORD} \
                      --firstname Admin \
                      --lastname User \
                      --role Admin \
                      --email admin@example.com && \
                      airflow webserver"
    networks:
      - mlnet

  airflow-scheduler:
    build: .
    image: custom-airflow:latest
    container_name: airflow-scheduler
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__FERNET_KEY=rqBLDe7ftXkYvPLKjwdkCR42Up-LVteBKtO_5DQfUww=
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    volumes:
      - ./airflow:/opt/airflow
      - ./dags:/opt/airflow/dags
      - /mnt/vm2share:/opt/airflow/data
      - ./secrets:/opt/airflow/secrets
    command: airflow scheduler
    networks:
      - mlnet

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.4.1
    container_name: mlflow
    ports:
      - "5000:5000"
    command: mlflow server --backend-store-uri sqlite:///mlflow.db --default-artifact-root /mlflow/artifacts --host 0.0.0.0
    volumes:
      - ./mlruns:/mlflow/artifacts
    networks:
      - mlnet

  mongo:
    image: mongo:4.4
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    networks:
      - mlnet

volumes:
  postgres_data:
  mongodata:

networks:
  mlnet:
